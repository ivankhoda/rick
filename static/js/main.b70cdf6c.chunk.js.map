{"version":3,"sources":["components/CardDetails/CardDetails.tsx","components/CardsContainer/StyledCardsContainer.ts","components/CardsContainer/CardsContainer.tsx","data/data.ts","components/FormInputFields/FormInputFields.tsx","components/FormSelect/FormSelect.tsx","components/FormSelect/StyledFormSelect.ts","components/FormControl/FormControl.tsx","components/PagesContainer/StyledPagesContainer.ts","components/PagesContainer/PagesContainer.tsx","StyledApp.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","root","width","media","height","backgroundSize","CardDetails","character","classes","Card","className","CardMedia","image","CardContent","Typography","gutterBottom","variant","name","color","status","origin","location","species","episode","length","map","ep","Chip","style","margin","size","label","replace","StyledCardsContainer","styled","div","StyledCard","CardsContainer","props","useState","open","setOpen","active","setActive","charactersArray","arr","Dialog","onClose","onClick","handleOpen","src","alt","id","selects","value","items","inputfFields","placeholder","FormInputFields","React","setValue","handleChange","event","target","item","TextField","defaultValue","onChange","FormSelect","setItem","StyledSelectContainer","InputLabel","StyledSelect","select","StyledButtonWrapper","Form","submit","onSubmit","Button","type","StyledPagesContainer","PagesContainer","count","pages","StyledApp","StyledControlPanel","StyledNotification","App","data","setData","info","setInfo","errorMessage","setErrorMessage","getData","link","a","fetch","method","headers","then","d","json","results","catch","err","console","log","useEffect","getCharacters","next","prev","ButtonGroup","aria-label","disabled","preventDefault","document","getElementById","gender","statusMessage","filterCharacters","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.b70cdf6c.chunk.js","sourcesContent":["// Components\nimport { Chip } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport { Character } from \"rickmortyapi/dist/interfaces\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 320,\n  },\n  media: {\n    height: 250,\n    backgroundSize: \"cover\",\n  },\n});\n\ntype Props = {\n  character: Character;\n};\n\nconst CardDetails: React.FC<Props> = ({ character }) => {\n  const classes = useStyles();\n  const episodeUrl = \"https://rickandmortyapi.com/api/episode/\";\n  return (\n    <Card className={classes.root}>\n      <CardMedia className={classes.media} image={character.image} />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\">\n          Name: {character.name}\n        </Typography>\n        <Typography gutterBottom color=\"textSecondary\">\n          Status: {character.status}\n          <br />\n          Origin: {character.origin?.name}\n          <br />\n          Location: {character.location?.name}\n          <br />\n          Status: {character.status}\n          <br />\n          Species: {character.species}\n          <br />\n          Episodes total: {character.episode?.length}\n          <br />\n        </Typography>\n\n        <Typography color=\"textSecondary\">Episodes:</Typography>\n        {character.episode ? (\n          character.episode.map((ep: any) => (\n            <Chip key={ep} style={{ margin: 3 }} size=\"small\" label={ep.replace(episodeUrl, \"\")} />\n          ))\n        ) : (\n          <Typography>There is no infromation</Typography>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default CardDetails;\n","import styled from \"styled-components\";\n\nexport const StyledCardsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-gap: 20px;\n  //max-width: 1300px;\n  padding: 20px;\n  margin: 15px;\n  overflow: hidden;\n  position: relative;\n  background: #60cbe6;\n  border-radius: 0.5vw;\n`;\n\nexport const StyledCard = styled.div`\n  transition: transform 500ms ease;\n  border-radius: 0.5vw;\n  cursor: pointer;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  transform: scale(1);\n  user-select: none;\n  border: solid;\n  background-color: white;\n  img {\n    height: 100%;\n    width: 100%;\n    border-radius: 0.2vw 0.2vw 0 0;\n    box-sizing: border-box;\n  }\n  h1 {\n  }\n  :hover {\n    transform: scale(${() => 5 / 100 + 1}) !important;\n  }\n  :hover ~ * {\n    transform: translateX(${() => 5 / 2 + \"%\"}) !important;\n  }\n  &.left {\n    transform-origin: left;\n    :hover ~ * {\n      transform: translateX(${() => 15 + \"%\"}) !important;\n    }\n  }\n  &.right {\n    transform-origin: right;\n    :hover ~ * {\n      transform: translateX(0%) !important;\n    }\n  }\n`;\n","import { Dialog, Typography } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { Character } from \"rickmortyapi/dist/interfaces\";\nimport CardDetails from \"../CardDetails/CardDetails\";\nimport { StyledCard, StyledCardsContainer } from \"./StyledCardsContainer\";\n\ntype IProps = {\n  arr: Character[] | undefined;\n};\n\nexport const CardsContainer: React.FC<IProps> = (props) => {\n  const [open, setOpen] = useState(false);\n  const [active, setActive] = useState<Character>({} as Character);\n\n  const handleOpen = (character: Character) => {\n    setOpen(true);\n    setActive(character);\n  };\n  const charactersArray = props.arr;\n\n  if (!StyledCard) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <Dialog\n        onClose={() => {\n          setOpen(false);\n        }}\n        open={open}\n      >\n        <CardDetails character={active} />\n      </Dialog>\n\n      <StyledCardsContainer>\n        {charactersArray ? (\n          charactersArray.map((character) => (\n            <StyledCard\n              key={character.id}\n              onClick={() => {\n                handleOpen(character);\n              }}\n            >\n              <img src={character.image} alt=\"Card name\" />\n              <h1>{character.name}</h1>\n            </StyledCard>\n          ))\n        ) : (\n          <Typography>Uppps, seems like we cannot display anything</Typography>\n        )}\n      </StyledCardsContainer>\n    </div>\n  );\n};\n","export const genders = [\n  {\n    value: \"\",\n    label: \"None\",\n  },\n  {\n    value: \"female\",\n    label: \"female\",\n  },\n  {\n    value: \"male\",\n    label: \"male\",\n  },\n  {\n    value: \"genderless\",\n    label: \"genderless\",\n  },\n  {\n    value: \"unknown\",\n    label: \"unknown\",\n  },\n];\nexport const statuses = [\n  {\n    value: \"\",\n    label: \"None\",\n  },\n  {\n    value: \"alive\",\n    label: \"alive\",\n  },\n  {\n    value: \"dead\",\n    label: \"dead\",\n  },\n  {\n    value: \"unknown\",\n    label: \"unknown\",\n  },\n];\nexport const selects = [\n  { name: \"gender\", id: \"selectGender\", label: \"Gender\", value: \"\", items: genders },\n  { name: \"status\", id: \"selectStatus\", label: \"Status\", value: \"\", items: statuses },\n];\nexport const inputfFields = [\n  { label: \"Input name\", placeholder: \"Rick\", id: \"Name\" },\n  { label: \"Input species\", placeholder: \"Human\", id: \"Species\" },\n  { label: \"Input type\", placeholder: \"Input type\", id: \"Type\" },\n];\n","import { TextField } from \"@material-ui/core\";\nimport React from \"react\";\n\ntype Options = {\n  items: Item[];\n};\ntype Item = {\n  label: string;\n  placeholder: string;\n  id: string;\n};\n\nexport const FormInputFields = (props: Options) => {\n  const { items } = props;\n  const [value, setValue] = React.useState(\"\");\n\n  const handleChange = (event: React.ChangeEvent<{ value: string }>) => {\n    let value = event.target.value;\n\n    setValue(value);\n  };\n\n  return (\n    <>\n      {items.map((item) => (\n        <TextField\n          key={item.id}\n          placeholder={item.placeholder}\n          id={item.id}\n          defaultValue={value}\n          onChange={handleChange}\n        />\n      ))}\n    </>\n  );\n};\n","import { InputLabel } from \"@material-ui/core\";\nimport React from \"react\";\nimport { StyledSelect, StyledSelectContainer } from \".\";\n\ntype Options = {\n  name: string;\n  id: string;\n  label: string;\n  items: Item[];\n};\ntype Item = {\n  value: string | undefined;\n  label: string;\n};\n\nexport const FormSelect = (props: Options) => {\n  const { name, id, label, items } = props;\n  const [item, setItem] = React.useState(\"\");\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setItem(event.target.value as string);\n  };\n\n  return (\n    <StyledSelectContainer>\n      <InputLabel id=\"Label\">{label}</InputLabel>\n      <StyledSelect name={name} id={id} value={item} onChange={handleChange}>\n        {items.map((item) => (\n          <option key={item.label} value={item.value}>\n            {item.value}\n          </option>\n        ))}\n      </StyledSelect>\n    </StyledSelectContainer>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const StyledSelectContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-around;\n  margin-top: 5px;\n  width: 100%;\n`;\nexport const StyledSelect = styled.select`\n  min-height: 20px;\n  min-width: 40px;\n\n  border-bottom: -internal-light-dark(rgb(255, 255, 255), rgb(59, 59, 59));\n  border-top: none;\n  border-left: none;\n  border-right: none;\n`;\n","import { Button } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { inputfFields, selects } from \"../../data\";\nimport { FormInputFields } from \"../FormInputFields\";\nimport { FormSelect } from \"../FormSelect/index\";\nimport { StyledSelectContainer } from \"../FormSelect/StyledFormSelect\";\n\nconst StyledButtonWrapper = styled.div`\n  margin-top: 10px;\n`;\n\nexport const Form = (props: { onSubmit: (event: React.FormEvent) => void }) => {\n  const submit = props.onSubmit;\n  return (\n    <>\n      <form onSubmit={submit}>\n        <FormInputFields items={inputfFields} />\n        <StyledSelectContainer>\n          {selects.map((select) => (\n            <FormSelect key={select.id} name={select.name} id={select.id} label={select.label} items={select.items} />\n          ))}\n        </StyledSelectContainer>\n        <StyledButtonWrapper>\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n            SEARCH\n          </Button>\n        </StyledButtonWrapper>\n      </form>\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const StyledPagesContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  width: 100%;\n  margin: auto;\n`;\n","import { Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { StyledPagesContainer } from \"./StyledPagesContainer\";\n\ninterface IProps {\n  count: number;\n  next: string | null;\n  pages: number;\n  prev: string | null;\n}\n\nexport const PagesContainer: React.FC<IProps> = (props) => {\n  return (\n    <StyledPagesContainer>\n      <Typography gutterBottom variant=\"h5\">\n        Total characters: {props.count}\n      </Typography>\n      <Typography gutterBottom variant=\"h5\">\n        Total pages: {props.pages}\n      </Typography>\n    </StyledPagesContainer>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const StyledApp = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  max-width: 100%;\n`;\nexport const StyledControlPanel = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const StyledNotification = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  position: absolute;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n","import { Button, ButtonGroup } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { getCharacters } from \"rickmortyapi\";\nimport { Character } from \"rickmortyapi/dist/interfaces\";\nimport { CardsContainer } from \"./components/CardsContainer/index\";\nimport { Form } from \"./components/FormControl/FormControl\";\nimport { PagesContainer } from \"./components/PagesContainer/index\";\nimport { StyledApp, StyledControlPanel, StyledNotification } from \"./StyledApp\";\n\ntype Info = {\n  count: number;\n  pages: number;\n  next: string | null;\n  prev: string | null;\n};\n\nconst App: React.FC = () => {\n  const [data, setData] = useState<Character[] | undefined>([]);\n  const [info, setInfo] = useState<Info>();\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const getData = async (link: string | null) => {\n    fetch(`${link}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((d) => d.json())\n      .then((data) => {\n        setData(data.results);\n        setInfo(data.info);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    getCharacters()\n      .then((data) => {\n        setData(data.data.results);\n        setInfo(data.data.info);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    let name = (document.getElementById(\"Name\") as HTMLInputElement).value;\n    let species = (document.getElementById(\"Species\") as HTMLInputElement).value;\n    let type = (document.getElementById(\"Type\") as HTMLInputElement).value;\n    let gender = (document.getElementById(\"selectGender\") as HTMLSelectElement).value;\n    let status = (document.getElementById(\"selectStatus\") as HTMLSelectElement).value;\n    const success = 200;\n    const filterCharacters = async () =>\n      await getCharacters({\n        name,\n        species,\n        type,\n        gender,\n        status,\n      }).then((d) => {\n        if (d.status === success) {\n          setData(d.data.results);\n          setInfo(d.data.info);\n        }\n        setErrorMessage(d.statusMessage);\n      });\n    filterCharacters();\n  };\n  if (!info || errorMessage) {\n    return <StyledNotification>{errorMessage ? errorMessage : \"Loading...\"}</StyledNotification>;\n  }\n\n  const { count, next, pages, prev } = { ...info };\n\n  return (\n    <StyledApp>\n      <StyledControlPanel>\n        <PagesContainer count={count} next={next} pages={pages} prev={prev} />\n\n        <ButtonGroup size=\"large\" aria-label=\"large outlined primary button group\">\n          {\" \"}\n          <Button\n            color=\"secondary\"\n            disabled={!prev}\n            onClick={() => {\n              getData(prev);\n            }}\n          >\n            Previous\n          </Button>\n          <Button\n            color=\"secondary\"\n            disabled={!next}\n            onClick={() => {\n              getData(next);\n            }}\n          >\n            Next\n          </Button>\n        </ButtonGroup>\n        <Form onSubmit={onSubmit} />\n      </StyledControlPanel>\n      <CardsContainer arr={data} />\n    </StyledApp>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}