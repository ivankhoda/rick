{"version":3,"sources":["components/CardComponentStyles.ts","components/CardDetails.tsx","components/StyledCardsContainer.ts","components/CardsContainer.tsx","components/PagesContainer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledCardComponent","styled","div","props","slideMargin","visibleSlides","zoomFactor","useStyles","makeStyles","root","width","media","height","backgroundSize","CardDetails","character","classes","Card","className","CardMedia","image","CardContent","Typography","gutterBottom","variant","name","color","status","origin","location","species","episode","length","map","ep","Chip","style","margin","size","label","replace","StyledCardsContainer","StyledCard","CardsContainer","useState","open","setOpen","active","setActive","charactersArray","arr","Dialog","onClose","onClick","handleOpen","src","alt","id","PagesContainer","numeredLink","pagesTotal","link","num","push","createLinks","pages","count","StyledControlPanel","StyledApp","App","data","setData","info","setInfo","getData","a","fetch","json","results","useEffect","next","prev","ButtonGroup","aria-label","Button","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1a7ba08.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\ntype Props = {\n  zoomFactor: number;\n  slideMargin: number;\n  visibleSlides: number;\n  className: string;\n};\n\nexport const StyledCardComponent = styled.div<Props>`\n  margin: 0 ${(props) => props.slideMargin}px;\n  transition: transform 500ms ease;\n  border-radius: 20px;\n  cursor: pointer;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  display: flex;\n  transform: scale(1);\n  user-select: none;\n\n  flex: 0 0\n    calc(\n      100% / ${(props) => props.visibleSlides} -\n        ${(props) => props.slideMargin * 2}px\n    );\n\n  img {\n    height: 100%;\n    width: 100%;\n    border-radius: 1.5vw;\n    box-sizing: border-box;\n  }\n\n  :hover {\n    transform: scale(${(props) => props.zoomFactor / 100 + 1}) !important;\n  }\n\n  :hover ~ * {\n    transform: translateX(${(props) => props.zoomFactor / 2 + \"%\"}) !important;\n  }\n\n  &.left {\n    transform-origin: left;\n\n    :hover ~ * {\n      transform: translateX(${(props) => props.zoomFactor + \"%\"}) !important;\n    }\n  }\n\n  &.right {\n    transform-origin: right;\n\n    :hover ~ * {\n      transform: translateX(0%) !important;\n    }\n  }\n`;\n","// Components\nimport { Chip } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport { Character } from \"../types/CharacterType\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 320,\n  },\n  media: {\n    height: 250,\n    backgroundSize: \"cover\",\n  },\n});\n\ntype Props = {\n  character: Character;\n};\n\nconst CardDetails: React.FC<Props> = ({ character }) => {\n  const classes = useStyles();\n  const episodeUrl = \"https://rickandmortyapi.com/api/episode/\";\n  return (\n    <Card className={classes.root}>\n      <CardMedia className={classes.media} image={character.image} />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\">\n          Name: {character.name}\n        </Typography>\n        <Typography gutterBottom color=\"textSecondary\">\n          Status: {character.status}\n          <br />\n          Origin: {character.origin.name}\n          <br />\n          Location: {character.location.name}\n          <br />\n          Status: {character.status}\n          <br />\n          Species: {character.species}\n          <br />\n          Episodes total {character.episode.length}\n          <br />\n        </Typography>\n\n        <Typography color=\"textSecondary\">Episodes:</Typography>\n\n        {character.episode.map((ep: any) => (\n          <Chip\n            key={ep}\n            style={{ margin: 3 }}\n            size=\"small\"\n            label={ep.replace(episodeUrl, \"\")}\n          />\n        ))}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default CardDetails;\n","import styled from \"styled-components\";\n\nexport const StyledCardsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-gap: 20px;\n  //max-width: 1300px;\n  padding: 20px;\n  margin: 15px;\n  overflow: hidden;\n  position: relative;\n  background: #60cbe6;\n  border-radius: 0.5vw;\n`;\n\nexport const StyledCard = styled.div`\n  transition: transform 500ms ease;\n  border-radius: 0.5vw;\n  cursor: pointer;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  transform: scale(1);\n  user-select: none;\n  border: solid;\n  background-color: white;\n  img {\n    height: 100%;\n    width: 100%;\n    border-radius: 0.5vw 0.5vw 0 0;\n    box-sizing: border-box;\n  }\n  h1 {\n  }\n  :hover {\n    transform: scale(${() => 5 / 100 + 1}) !important;\n  }\n\n  :hover ~ * {\n    transform: translateX(${() => 5 / 2 + \"%\"}) !important;\n  }\n\n  &.left {\n    transform-origin: left;\n\n    :hover ~ * {\n      transform: translateX(${() => 15 + \"%\"}) !important;\n    }\n  }\n\n  &.right {\n    transform-origin: right;\n\n    :hover ~ * {\n      transform: translateX(0%) !important;\n    }\n  }\n`;\n","import { Dialog } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport \"../App.css\";\nimport { Character } from \"../types/CharacterType\";\nimport { StyledCardComponent } from \"./CardComponentStyles\";\nimport CardDetails from \"./CardDetails\";\nimport { StyledCard, StyledCardsContainer } from \"./StyledCardsContainer\";\n\ntype IProps = {\n  arr: Character[];\n};\n\nconst CardsContainer: React.FC<IProps> = (props) => {\n  const [open, setOpen] = useState(false);\n  const [active, setActive] = useState<Character>({} as Character);\n\n  const handleOpen = (character: Character) => {\n    setOpen(true);\n    setActive(character);\n  };\n  const charactersArray = props.arr;\n\n  if (!StyledCardComponent) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <Dialog\n        onClose={() => {\n          setOpen(false);\n        }}\n        open={open}\n      >\n        <CardDetails character={active} />\n      </Dialog>\n\n      <StyledCardsContainer>\n        {charactersArray.map((character) => (\n          <StyledCard\n            key={character.id}\n            onClick={() => {\n              handleOpen(character);\n            }}\n          >\n            <img src={character.image} alt=\"Card name\" />\n            <h1>{character.name}</h1>\n          </StyledCard>\n        ))}\n      </StyledCardsContainer>\n    </div>\n  );\n};\n\nexport default CardsContainer;\n","import { Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport \"../App.css\";\n\ninterface IProps {\n  count: number;\n  next: string | null;\n  pages: number;\n  prev: string | null;\n}\nconst baseLink = `https://rickandmortyapi.com/api/character?page=`;\n\nconst PagesContainer: React.FC<IProps> = (props) => {\n  const pagesTotal: string[] = [];\n  let numeredLink: string;\n  const createLinks = (link: string, num: number) => {\n    while (num > 0) {\n      numeredLink = `${link}${num}`;\n      num--;\n      pagesTotal.push(numeredLink);\n    }\n    return;\n  };\n  createLinks(baseLink, props.pages);\n\n  return (\n    <div>\n      <Typography gutterBottom variant=\"h5\">\n        Total characters: {props.count}\n      </Typography>\n      <Typography gutterBottom variant=\"h5\">\n        Total pages: {props.pages}\n      </Typography>\n    </div>\n  );\n};\n\nexport default PagesContainer;\n","import { Button, ButtonGroup } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport CardsContainer from \"./components/CardsContainer\";\nimport PagesContainer from \"./components/PagesContainer\";\nimport { Character } from \"./types/CharacterType\";\n\ntype Info = {\n  count: number;\n  next: string;\n  pages: number;\n  prev: string;\n};\nconst StyledControlPanel = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledApp = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  max-width: 1350px;\n`;\n\nconst baseLink = `https://rickandmortyapi.com/api/character?page=`;\nconst App: React.FC = () => {\n  const [data, setData] = useState<Character[]>([]);\n  const [info, setInfo] = useState<Info>();\n\n  const getData = async (link: string) => {\n    const data = await (await fetch(`${link}`)).json();\n    setData(data.results);\n    setInfo(data.info);\n  };\n\n  useEffect(() => {\n    getData(baseLink);\n  }, []);\n\n  if (!info) {\n    return <div>Loading...</div>;\n  }\n  const { count, next, pages, prev } = { ...info };\n\n  return (\n    <StyledApp>\n      <StyledControlPanel>\n        <PagesContainer count={count} next={next} pages={pages} prev={prev} />\n\n        <ButtonGroup\n          size=\"large\"\n          aria-label=\"large outlined primary button group\"\n        >\n          {\" \"}\n          <Button\n            color=\"secondary\"\n            disabled={!prev}\n            onClick={() => {\n              getData(prev);\n            }}\n          >\n            Previous\n          </Button>\n          <Button\n            color=\"secondary\"\n            disabled={!next}\n            onClick={() => {\n              getData(next);\n            }}\n          >\n            Next\n          </Button>\n        </ButtonGroup>\n      </StyledControlPanel>\n      <CardsContainer arr={data} />\n    </StyledApp>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}